#!/usr/bin/env python3
"""
Script pour g√©n√©rer les cl√©s de s√©curit√© pour NextGen-Agent.
"""
import secrets
import string
import os
from pathlib import Path

def generate_secret_key(length=64):
    """G√©n√®re une cl√© secr√®te s√©curis√©e."""
    alphabet = string.ascii_letters + string.digits + "!@#$%^&*"
    return ''.join(secrets.choice(alphabet) for _ in range(length))

def generate_jwt_secret(length=32):
    """G√©n√®re un secret JWT s√©curis√©."""
    return secrets.token_urlsafe(length)

def update_env_file():
    """Met √† jour le fichier .env avec les nouvelles cl√©s."""
    project_root = Path(__file__).parent.parent
    env_file = project_root / ".env"
    
    # G√©n√©rer les cl√©s
    secret_key = generate_secret_key()
    jwt_secret = generate_jwt_secret()
    
    print("üîê G√âN√âRATION DES CL√âS DE S√âCURIT√â")
    print("=" * 50)
    print(f"SECRET_KEY: {secret_key}")
    print(f"JWT_SECRET: {jwt_secret}")
    print("=" * 50)
    
    if env_file.exists():
        # Lire le fichier .env existant
        with open(env_file, 'r') as f:
            content = f.read()
        
        # Remplacer les cl√©s
        content = content.replace('SECRET_KEY=your_secret_key_here', f'SECRET_KEY={secret_key}')
        content = content.replace('JWT_SECRET=your_jwt_secret_here', f'JWT_SECRET={jwt_secret}')
        
        # √âcrire le fichier mis √† jour
        with open(env_file, 'w') as f:
            f.write(content)
        
        print("‚úÖ Fichier .env mis √† jour avec les nouvelles cl√©s de s√©curit√©")
        print(f"üìÅ Fichier: {env_file}")
    else:
        print("‚ùå Fichier .env non trouv√©")
        print("Cr√©ez d'abord le fichier .env avec le template fourni")

if __name__ == "__main__":
    update_env_file()
